# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Define jobs to be invoked later in a workflow.
jobs:
  check-tests-build:
    docker:
      - image: cimg/openjdk:17.0  # Base image with Java 17
    steps:
      - checkout  # Check out the code
      - run:
          name: Install Dependencies
          command: mvn dependency:resolve  # Ensure dependencies are resolved
      - run:
          name: Compile All Tests
          command: mvn test-compile  # Verifies that test classes compile correctly
      - run:
          name: Notify
          command: echo "All tests were successfully compiled."

  run-unit-tests:
    docker:
      - image: cimg/openjdk:17.0  # Imagen base con Java 17
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: mvn dependency:resolve
      - run:
          name: Run Unit Tests (UserServiceTest)
          command: mvn test -Dtest=com.mayab.quality.unittest.service.UserServiceTest -e -X
      - run:
          name: Notify
          command: echo "Unit Tests completed successfully."

  run-integration-test:
    docker:
      - image: cimg/openjdk:17.0
      - image: mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: dbunit
    steps:
      - checkout
      - run:
          name: Waiting for MySQL to be ready
          command: |
            for i in $(seq 1 10);
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Install MySQL and import schema
          command: |
            sudo apt update && sudo apt install default-mysql-client
            echo "SOURCE src/test/resources/schema.sql;" | mysql -h 127.0.0.1 -uroot -p123456 dbunit
            echo "Checking tables in dbunit..."
            mysql -h 127.0.0.1 -uroot -p123456 dbunit -e "SHOW TABLES;"
            echo "SELECT * FROM usuarios;" | mysql -h 127.0.0.1 -uroot -p123456 dbunit
            echo "done"
      - run:
          name: Run Integration Test
          command: mvn test -Dtest=com.mayab.quality.integration.UserServiceTest -e -X
      - run:
          name: Notify
          command: echo "Integration Tests completed successfully."

  run-selenium-tests:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Installing browser
          command: |
            sudo apt-get update
            sudo apt-get install -y wget gnupg
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable
      - run:
          name: Installing ChromeDriver
          command: |
            sudo apt-get install -y unzip
            wget -N https://chromedriver.storage.googleapis.com/114.0.5735.90/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/chromedriver
      - run:
          name: Run CRUD Selenium Tests
          command: mvn test -Dtest=com.mayab.quality.functional.CRUDSeleniumTest -e -X
      - run:
          name: Notify
          command: echo "Selenium Tests completed successfully."

  deploy:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - run:
          name: Deployment Step
          command: echo "Deployment successful for main branch!"

# Orchestrate jobs using workflows
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - check-tests-build  # New job to ensure all tests are compiled
      - run-unit-tests:
          requires:
            - check-tests-build
      - run-integration-test:
          requires:
            - run-unit-tests
      - run-selenium-tests:
          requires:
            - run-integration-test
      - deploy:
          requires:
            - run-selenium-tests
          filters:
            branches:
              only:
                - main
